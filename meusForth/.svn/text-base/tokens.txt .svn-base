    Data Stack Manipulation Operators
    ---------------------------------
    TOKEN_QDUP                                     "?DUP"          ( x -- 0 | x x )
    TOKEN_DEPTH                                    "DEPTH"         ( -- +n )
    TOKEN_DROP                                     "DROP"          ( x -- )
    TOKEN_DUP                                      "DUP"           ( x -- x x )
    TOKEN_NIP                                      "NIP"           ( x1 x2 -- x1 )
    TOKEN_OVER                                     "OVER"          ( x1 x2 -- x1 x2 x1 )
    TOKEN_PICK                                     "PICK"          ( +n -- x )
    TOKEN_ROT                                      "ROT"           ( x1 x2 x3 -- x2 x3 x1 )
    TOKEN_SWAP                                     "SWAP"          ( x1 x2 -- x2 x1 )
    TOKEN_TUCK                                     "TUCK"          ( x1 x2 -- x2 x1 x2 )

    TOKEN_2DROP                                    "2DROP"         ( x1 x2 -- )
    TOKEN_2DUP                                     "2DUP"          ( x1 x2 -- x1 x2 x1 x2 )
    TOKEN_2OVER                                    "2OVER"         ( x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2 )
    TOKEN_2ROT                                     "2ROT"          ( x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2 )
    TOKEN_2SWAP                                    "2SWAP"         ( x1 x2 x3 x4 -- x3 x4 x1 x2 )

    Return Stack Manipulation Operators
    -----------------------------------
    TOKEN_2_TO_R                                   "2>R"           (S: x1 x2 -- ) (R: -- x1 x2 )
    TOKEN_2_R_FROM                                 "2R>"           (S: -- x1 x2 ) (R: x1 x2 -- )
    TOKEN_2_R_FETCH                                "2R@"           (S: -- x1 x2 ) (R: x1 x2 -- x1 x2 )
    TOKEN_TO_R                                     ">R"            (S: x -- ) (R: -- x )
    TOKEN_R_FROM                                   "R>"            (S: -- x ) (R: x -- )
    TOKEN_R_FETCH                                  "R@"            (S: -- x ) (R: x x -- x x )

    Programmer Conveniences
    -----------------------
    TOKEN_DOT_S                                    ".S"            ( -- )
    TOKEN_DUMP                                     "DUMP"          ( addr +n -- )
    TOKEN_ENVIRONMENT                              "ENVIRONMENT?"  ( c-addr u -- false | i*x true )
    TOKEN_WORDS                                    "WORDS"         ( -- )

    Single Precision Operators
    ---------------------------
    TOKEN_TIMES                                    "*"
    TOKEN_MULT_DIV                                 "*/"
    TOKEN_MULT_DIV_MOD                             "*/MOD"
    TOKEN_PLUS                                     "+"
    TOKEN_MINUS                                    "-"
    TOKEN_DIVIDE                                   "/"
    TOKEN_DIVIDE                                   "/MOD"
    TOKEN_1PLUS                                    "1+"
    TOKEN_1MINUS                                   "1-"
    TOKEN_2PLUS                                    "2+"
    TOKEN_2MINUS                                   "2-"
    TOKEN_2TIMES                                   "2*"
    TOKEN_2DIVIDE                                  "2/"
    TOKEN_LSHIFT                                   "LSHIFT"
    TOKEN_MOD                                      "MOD"
    TOKEN_RSHIFT                                   "RSHIFT"

    TOKEN_D_PLUS                                   "D+"
    TOKEN_D_MINUS                                  "D-"
    TOKEN_D_2TIMES                                 "D2*"
    TOKEN_D_2DIV                                   "D2/"

    Mixed Precision Operators !!! Add the rest, page 37
    -------------------------
    TOKEN_D_UMSMOD,                                "UM/MOD"
    TOKEN_D_MUSMOD,                                "MU/MOD"
    TOKEN_D_MTIMES,                                "M*"
    TOKEN_D_UMTIMES,                               "UM*"

    Logical Operators
    -----------------
    TOKEN_ABS                                      "ABS"
    TOKEN_AND                                      "AND"
    TOKEN_INVERT                                   "INVERT"
    TOKEN_MAX                                      "MAX"
    TOKEN_MIN                                      "MIN"
    TOKEN_NEGATE                                   "NEGATE"
    TOKEN_OR                                       "OR"
    TOKEN_WITHIN                                   "WITHIN"
    TOKEN_XOR,                                     "XOR"

    TOKEN_DABS                                     "DABS"
    TOKEN_DMAX                                     "DMAX"
    TOKEN_DMIN                                     "DMIN"
    TOKEN_DNEGATE                                  "DNEGATE"

    Others
    ------
    TOKEN_VARIABLE                                 "VARIABLE"
    TOKEN_2VARIABLE                                "2VARIABLE"
    TOKEN_CVARIABLE                                "CVARIABLE"

    TOKEN_CONSTANT                                 "CONSTANT"
    TOKEN_2CONSTANT                                "2CONSTANT"
    TOKEN_VALUE                                    "VALUE"

    TOKEN_COMMA                                    ","
    TOKEN_ALIGN                                    "ALIGN"
    TOKEN_ALIGNED                                  "ALIGNED"
    TOKEN_ALLOT                                    "ALLOT"
    TOKEN_BUFFER                                   "BUFFER"
    TOKEN_C_COMMA                                  "C,"
    TOKEN_CELL_PLUS                                "CELL+"
    TOKEN_CELLS                                    "CELLS"
    TOKEN_CHAR_PLUS                                "CHAR+"
    TOKEN_CHARS                                    "CHARS"
    TOKEN_CREATE                                   "CREATE"

    Memory Stack Operations
    -----------------------
    TOKEN_STORE                                    "!"
    TOKEN_PLUS_STORE                               "+!"
    TOKEN_2_STORE                                  "2!"
    TOKEN_2_FETCH                                  "2@"
    TOKEN_FETCH                                    "@"
    TOKEN_BLANK                                    "BLANK"

    TOKEN_CSTORE                                   "C!"
    TOKEN_CFETCH                                   "C@"
    TOKEN_ERASE                                    "ERASE"
    TOKEN_FILL                                     "FILL"
    TOKEN_MOVE                                     "MOVE"
    TOKEN_TO                                       "TO"

    Single Characters
    -----------------
    TOKEN_CHAR                                     "CHAR"
    TOKEN_BRACKET_CHAR                             "[CHAR]"

    Scratch Storage For Strings
    ---------------------------
    TOKEN_PAD                                      "PAD"
    TOKEN_COUNT                                    "COUNT"
    TOKEN_S_QUOTE_START                            "S""
    TOKEN_C_QUOTE_START                            "C""
    TOKEN_DOT_QUOTE_START                          ".""
    TOKEN_COMMA_QUOTE_START                        ",""
    TOKEN_QUOTE_END                                """

    String Management Operations
    ----------------------------
    TOKEN_MINUS_TRAILING                           "-TRAILING"
    TOKEN_SLASH_STRING                             "/STRING"
    TOKEN_HERE                                     "HERE"
    TOKEN_CMOVE                                    "CMOVE"
    TOKEN_CMOVE_UP                                 "CMOVE>"

    Comparing Character Strings
    ---------------------------
    TOKEN_COMPARE                                  "COMPARE"
    TOKEN_SEARCH                                   "SEARCH"

    Number Conversion
    -----------------
    TOKEN_TO_NUMBER                                ">NUMBER"
    TOKEN_NUMBER                                   "NUMBER"
    TOKEN_IS_NUMBER                                "NUMBER?"

    Numeric Ouput
    -------------
    TOKEN_DOT                                      "."
    TOKEN_DOT_R                                    ".R"
    TOKEN_QUESTION                                 "?"
    TOKEN_D_DOT                                    "D."
    TOKEN_D_DOT_R                                  "D.R"
    TOKEN_U_DOT                                    "U."
    TOKEN_U_DOT_R                                  "U.R"

    Pictured Number
    ---------------
    TOKEN_BRACKET_NUMBER                           "<#"
    TOKEN_NUMBER_SIGN                              "#"
    TOKEN_NUMBER_SIGN_S                            "#S"
    TOKEN_SIGN                                     "SIGN"
    TOKEN_NUMBER_BRACKET                           "#>"
    TOKEN_HOLD                                     "HOLD"

    Comparison And Testing Operations
    ---------------------------------
    TOKEN_COMP_ZERO_LESSTHAN                       "0<"
    TOKEN_COMP_ZERO_NOT_EQUAL                      "0<>"
    TOKEN_COMP_ZERO_EQUAL                          "0="
    TOKEN_COMP_ZERO_GREATERTHAN                    "0>"
    TOKEN_COMP_LESSTHAN                            "<"
    TOKEN_COMP_NOT_EQUAL                           "<>"
    TOKEN_COMP_EQUAL                               "="
    TOKEN_COMP_GREATERTHAN                         ">"
    TOKEN_COMP_D_ZERO_LESSTHAN                     "D0<"
    TOKEN_COMP_D_ZERO_EQUAL                        "D0="
    TOKEN_COMP_D_LESSTHAN                          "D<"
    TOKEN_COMP_D_EQUAL                             "D="
    TOKEN_COMP_DU_LESSTHAN                         "DU<"
    TOKEN_FALSE                                    "FALSE"
    TOKEN_NOT                                      "NOT"
    TOKEN_TRUE                                     "TRUE"
    TOKEN_COMP_U_LESSTHAN                          "U<"
    TOKEN_COMP_U_GREATERTHAN                       "U>"


    Conditionals
    ------------
    TOKEN_ELSE                                     "ELSE"
    TOKEN_IF                                       "IF"
    TOKEN_THEN                                     "THEN"

    Indefinite Loops
    ----------------
    TOKEN_AGAIN                                    "AGAIN"
    TOKEN_BEGIN                                    "BEGIN"
    TOKEN_REPEAT                                   "REPEAT"
    TOKEN_UNTIL                                    "UNTIL"
    TOKEN_WHILE                                    "WHILE"

    Counting Loops
    --------------
    TOKEN_DO                                       "DO"
    TOKEN_QUESTION_DO                              "?DO"
    TOKEN_LOOP                                     "LOOP"
    TOKEN_PLUS_LOOP                                "+LOOP"
    TOKEN_I                                        "I"
    TOKEN_J                                        "J"
    TOKEN_LEAVE                                    "LEAVE"
    TOKEN_UNLOOP                                   "UNLOOP"

    Case Statement
    --------------
    TOKEN_CASE                                     "CASE"
    TOKEN_ENDCASE                                  "ENDCASE"
    TOKEN_ENDOF                                    "ENDOF"
    TOKEN_OF                                       "OF"

    TOKEN_EXIT,                                    "EXIT"

    Execution Tokens
    ----------------
    TOKEN_TICK                                     "'"
    TOKEN_BRACKET_TICK                             "[']"
    TOKEN_EXECUTE                                  "EXECUTE"
    TOKEN_FETCH_EXECUTE                            "@EXECUTE"

    Single Function Pointers
    ------------------------
    TOKEN_DEFER                                    "DEFER"
    TOKEN_IS                                       "IS"

    Exception handling
    ------------------
    TOKEN_ABORT                                    "ABORT"
    TOKEN_ABORT_QUOTE                              "ABORT""
    TOKEN_CATCH                                    "CATCH"
    TOKEN_THROW                                    "THROW"
    TOKEN_

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

    TOKEN_2LITERAL,                                "2LITERAL"                  , FLAG_IMMEDIATE);
    TOKEN_2LITERAL_P,                              "(2LITERAL)"
    TOKEN_ACCEPT,                                  "ACCEPT"
    TOKEN_ALITERAL,                                "ALITERAL"                  , FLAG_IMMEDIATE);
    TOKEN_ALITERAL_P,                              "(ALITERAL)"
    TOKEN_ALLOCATE,                                "ALLOCATE"
    TOKEN_ARSHIFT,                                 "ARSHIFT"
    TOKEN_BAIL,                                    "BAIL"
    TOKEN_BRANCH,                                  "BRANCH"
    TOKEN_BODY_OFFSET,                             "BODY_OFFSET"
    TOKEN_BYE,                                     "BYE"
    TOKEN_COLON,                                   ":"
    TOKEN_COLON_P,                                 "(:)"
    TOKEN_CR,                                      "CR"
    TOKEN_CREATE_P,                                "(CREATE)"
    TOKEN_DO_P,                                    "(DO)"
    TOKEN_EMIT_P,                                  "(EMIT)"
    TOKEN_EMIT_P,                                  "EMIT"
    TOKEN_EOL,                                     "EOL"
    TOKEN_ERRORQ_P,                                "(?ERROR)"
    TOKEN_ERRORQ_P,                                "?ERROR"
    TOKEN_FIND,                                    "FIND"
    TOKEN_FILE_CREATE,                             "CREATE-FILE"
    TOKEN_FILE_OPEN,                               "OPEN-FILE"
    TOKEN_FILE_CLOSE,                              "CLOSE-FILE"
    TOKEN_FILE_READ,                               "READ-FILE"
    TOKEN_FILE_SIZE,                               "FILE-SIZE"
    TOKEN_FILE_WRITE,                              "WRITE-FILE"
    TOKEN_FILE_POSITION,                           "FILE-POSITION"
    TOKEN_FILE_REPOSITION,                         "REPOSITION-FILE"
    TOKEN_FILE_RO,                                 "R/O"
    TOKEN_FILE_RW,                                 "R/W"
    TOKEN_FINDNFA,                                 "FINDNFA"
    TOKEN_FLUSHEMIT,                               "FLUSHEMIT"
    TOKEN_FREE,                                    "FREE"
    TOKEN_NUMBERQ_P,                               "(SNUMBER?)"
    TOKEN_INCLUDE_FILE,                            "INCLUDE-FILE"
    TOKEN_KEY,                                     "KEY"
    TOKEN_LEAVE_P,                                 "(LEAVE)"
    TOKEN_LITERAL,                                 "LITERAL"                   , FLAG_IMMEDIATE);
    TOKEN_LITERAL_P,                               "(LITERAL)"
    TOKEN_LOADSYS,                                 "LOADSYS"
    TOKEN_LOCAL_COMPILER,                          "LOCAL-COMPILER"
    TOKEN_LOCAL_ENTRY,                             "(LOCAL.ENTRY)"
    TOKEN_LOCAL_EXIT,                              "(LOCAL.EXIT)"
    TOKEN_LOCAL_FETCH,                             "(LOCAL@)"
    TOKEN_LOCAL_FETCH_1,                           "(1_LOCAL@)"
    TOKEN_LOCAL_FETCH_2,                           "(2_LOCAL@)"
    TOKEN_LOCAL_FETCH_3,                           "(3_LOCAL@)"
    TOKEN_LOCAL_FETCH_4,                           "(4_LOCAL@)"
    TOKEN_LOCAL_FETCH_5,                           "(5_LOCAL@)"
    TOKEN_LOCAL_FETCH_6,                           "(6_LOCAL@)"
    TOKEN_LOCAL_FETCH_7,                           "(7_LOCAL@)"
    TOKEN_LOCAL_FETCH_8,                           "(8_LOCAL@)"
    TOKEN_LOCAL_STORE,                             "(LOCAL!)"
    TOKEN_LOCAL_STORE_1,                           "(1_LOCAL!)"
    TOKEN_LOCAL_STORE_2,                           "(2_LOCAL!)"
    TOKEN_LOCAL_STORE_3,                           "(3_LOCAL!)"
    TOKEN_LOCAL_STORE_4,                           "(4_LOCAL!)"
    TOKEN_LOCAL_STORE_5,                           "(5_LOCAL!)"
    TOKEN_LOCAL_STORE_6,                           "(6_LOCAL!)"
    TOKEN_LOCAL_STORE_7,                           "(7_LOCAL!)"
    TOKEN_LOCAL_STORE_8,                           "(8_LOCAL!)"
    TOKEN_LOCAL_PLUSSTORE,                         "(LOCAL+!)"
    TOKEN_LOOP_P,                                  "(LOOP)"
    TOKEN_NAME_TO_TOKEN,                           "NAME>"
    TOKEN_NAME_TO_PREVIOUS,                        "PREVNAME"
    TOKEN_NOOP,                                    "NOOP"
    TOKEN_PLUSLOOP_P,                              "(+LOOP)"
    TOKEN_QUIT_P,                                  "(QUIT)"
    TOKEN_QUIT_P,                                  "QUIT"
    TOKEN_QDO_P,                                   "(?DO)"
    TOKEN_QTERMINAL,                               "?TERMINAL"
    TOKEN_QTERMINAL,                               "KEY?"
    TOKEN_REFILL,                                  "REFILL"
    TOKEN_RESIZE,                                  "RESIZE"
    TOKEN_ROLL,                                    "ROLL"
    TOKEN_R_DROP,                                  "RDROP"
    TOKEN_RP_FETCH,                                "RP@"
    TOKEN_RP_STORE,                                "RP!"
    TOKEN_SEMICOLON,                               ";"                         , FLAG_IMMEDIATE);
    TOKEN_SP_FETCH,                                "SP@"
    TOKEN_SP_STORE,                                "SP!"
    TOKEN_SAVE_FORTH_P,                            "(SAVE-FORTH)"
    TOKEN_SCAN,                                    "SCAN"
    TOKEN_SKIP,                                    "SKIP"
    TOKEN_SOURCE,                                  "SOURCE"
    TOKEN_SOURCE_SET,                              "SET-SOURCE"
    TOKEN_SOURCE_ID,                               "SOURCE-ID"
    TOKEN_SOURCE_ID_PUSH,                          "PUSH-SOURCE-ID"
    TOKEN_SOURCE_ID_POP,                           "POP-SOURCE-ID"
    TOKEN_TEST1,                                   "TEST1"
    TOKEN_TYPE,                                    "TYPE"
    TOKEN_VAR_BASE,                                "BASE"
    TOKEN_VAR_CODE_BASE,                           "CODE-BASE"
    TOKEN_VAR_CODE_LIMIT,                          "CODE-LIMIT"
    TOKEN_VAR_CONTEXT,                             "CONTEXT"
    TOKEN_VAR_DP,                                  "DP"
    TOKEN_VAR_ECHO,                                "ECHO"
    TOKEN_VAR_HEADERS_PTR,                         "HEADERS-PTR"
    TOKEN_VAR_HEADERS_BASE,                        "HEADERS-BASE"
    TOKEN_VAR_HEADERS_LIMIT,                       "HEADERS-LIMIT"
    TOKEN_VAR_NUM_TIB,                             "#TIB"
    TOKEN_VAR_RETURN_CODE,                         "RETURN-CODE"
    TOKEN_VAR_TRACE_FLAGS,                         "TRACE-FLAGS"
    TOKEN_VAR_TRACE_LEVEL,                         "TRACE-LEVEL"
    TOKEN_VAR_TRACE_STACK,                         "TRACE-STACK"
    TOKEN_VAR_OUT,                                 "OUT"
    TOKEN_VAR_STATE,                               "STATE"
    TOKEN_VAR_TO_IN,                               ">IN"
    TOKEN_VLIST,                                   "VLIST"
    TOKEN_WORD,                                    "WORD"
    TOKEN_WORD_FETCH,                              "W@"
    TOKEN_WORD_STORE,                              "W!"
    TOKEN_ZERO_BRANCH,                             "0BRANCH"

    Floating Point
    --------------
    TOKEN_FP_D_TO_F,                               "D>F"
    TOKEN_FP_FSTORE,                               "F!"
    TOKEN_FP_FTIMES,                               "F*"
    TOKEN_FP_FPLUS,                                "F+"
    TOKEN_FP_FMINUS,                               "F-"
    TOKEN_FP_FSLASH,                               "F/"
    TOKEN_FP_F_ZERO_LESS_THAN,                     "F0<"
    TOKEN_FP_F_ZERO_EQUALS,                        "F0="
    TOKEN_FP_F_LESS_THAN,                          "F<"
    TOKEN_FP_F_TO_D,                               "F>D"
    TOKEN_FP_FFETCH,                               "F@"
    TOKEN_FP_FDEPTH,                               "FDEPTH"
    TOKEN_FP_FDROP,                                "FDROP"
    TOKEN_FP_FDUP,                                 "FDUP"
    TOKEN_FP_FLITERAL,                             "FLITERAL"
    TOKEN_FP_FLITERAL_P,                           "(FLITERAL)"
    TOKEN_FP_FLOAT_PLUS,                           "FLOAT+"
    TOKEN_FP_FLOATS,                               "FLOATS"
    TOKEN_FP_FLOOR,                                "FLOOR"
    TOKEN_FP_FMAX,                                 "FMAX"
    TOKEN_FP_FMIN,                                 "FMIN"
    TOKEN_FP_FNEGATE,                              "FNEGATE"
    TOKEN_FP_FOVER,                                "FOVER"
    TOKEN_FP_FROT,                                 "FROT"
    TOKEN_FP_FROUND,                               "FROUND"
    TOKEN_FP_FSWAP,                                "FSWAP"

    --- Extended words ---
    TOKEN_FP_FSTAR_STAR,                           "F**"
    TOKEN_FP_FABS,                                 "FABS"
    TOKEN_FP_FACOS,                                "FACOS"
    TOKEN_FP_FACOSH,                               "FACOSH"
    TOKEN_FP_FALOG,                                "FALOG"
    TOKEN_FP_FASIN,                                "FASIN"
    TOKEN_FP_FASINH,                               "FASINH"
    TOKEN_FP_FATAN,                                "FATAN"
    TOKEN_FP_FATAN2,                               "FATAN2"
    TOKEN_FP_FATANH,                               "FATANH"
    TOKEN_FP_FCOS,                                 "FCOS"
    TOKEN_FP_FCOSH,                                "FCOSH"
    TOKEN_FP_FLN,                                  "FLN"
    TOKEN_FP_FLNP1,                                "FLNP1"
    TOKEN_FP_FLOG,                                 "FLOG"
    TOKEN_FP_FSIN,                                 "FSIN"
    TOKEN_FP_FSINCOS,                              "FSINCOS"
    TOKEN_FP_FSINH,                                "FSINH"
    TOKEN_FP_FSQRT,                                "FSQRT"
    TOKEN_FP_FTAN,                                 "FTAN"
    TOKEN_FP_FTANH,                                "FTANH"
    TOKEN_FP_FPICK,                                "FPICK" 